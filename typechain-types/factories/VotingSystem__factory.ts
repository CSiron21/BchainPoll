/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { VotingSystem, VotingSystemInterface } from "../VotingSystem";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "pollId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string[]",
        name: "options",
        type: "string[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
    ],
    name: "PollCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "pollId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "option",
        type: "uint256",
      },
    ],
    name: "Voted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_title",
        type: "string",
      },
      {
        internalType: "string[]",
        name: "_options",
        type: "string[]",
      },
      {
        internalType: "uint256",
        name: "_durationInMinutes",
        type: "uint256",
      },
    ],
    name: "createPoll",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pollId",
        type: "uint256",
      },
    ],
    name: "getPollDetails",
    outputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string[]",
        name: "options",
        type: "string[]",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pollId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_optionIndex",
        type: "uint256",
      },
    ],
    name: "getVoteCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pollId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_voter",
        type: "address",
      },
    ],
    name: "hasVoted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pollCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "polls",
    outputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pollId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_optionIndex",
        type: "uint256",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506119ff806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063ac2f00741161005b578063ac2f007414610104578063b384abef14610137578063de2e19a014610153578063f8c860f4146101835761007d565b806343859632146100825780639207891d146100b25780639a0040e4146100d0575b600080fd5b61009c60048036038101906100979190610c41565b6101b3565b6040516100a99190610c9c565b60405180910390f35b6100ba61027f565b6040516100c79190610cc6565b60405180910390f35b6100ea60048036038101906100e59190610ce1565b610285565b6040516100fb959493929190610eaa565b60405180910390f35b61011e60048036038101906101199190610ce1565b61049c565b60405161012e9493929190610f0b565b60405180910390f35b610151600480360381019061014c9190610f57565b610561565b005b61016d60048036038101906101689190610f57565b610853565b60405161017a9190610cc6565b60405180910390f35b61019d600480360381019061019891906111b2565b610940565b6040516101aa9190610cc6565b60405180910390f35b600080600084815260200190815260200160002060040160009054906101000a900460ff16610217576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020e90611289565b60405180910390fd5b60008084815260200190815260200160002060050160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60015481565b606080600080600080600087815260200190815260200160002060040160009054906101000a900460ff166102ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e690611289565b60405180910390fd5b600080600088815260200190815260200160002090508060000181600101826002015483600301548460040160009054906101000a900460ff16848054610335906112d8565b80601f0160208091040260200160405190810160405280929190818152602001828054610361906112d8565b80156103ae5780601f10610383576101008083540402835291602001916103ae565b820191906000526020600020905b81548152906001019060200180831161039157829003601f168201915b5050505050945083805480602002602001604051908101604052809291908181526020016000905b828210156104825783829060005260206000200180546103f5906112d8565b80601f0160208091040260200160405190810160405280929190818152602001828054610421906112d8565b801561046e5780601f106104435761010080835404028352916020019161046e565b820191906000526020600020905b81548152906001019060200180831161045157829003601f168201915b5050505050815260200190600101906103d6565b505050509350955095509550955095505091939590929450565b60006020528060005260406000206000915090508060000180546104bf906112d8565b80601f01602080910402602001604051908101604052809291908181526020018280546104eb906112d8565b80156105385780601f1061050d57610100808354040283529160200191610538565b820191906000526020600020905b81548152906001019060200180831161051b57829003601f168201915b5050505050908060020154908060030154908060040160009054906101000a900460ff16905084565b60008083815260200190815260200160002060040160009054906101000a900460ff166105c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ba90611289565b60405180910390fd5b60008083815260200190815260200160002060050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610663576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065a90611355565b60405180910390fd5b600080838152602001908152602001600020600201544210156106bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b2906113c1565b60405180910390fd5b60008083815260200190815260200160002060030154421115610713576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070a9061142d565b60405180910390fd5b60008083815260200190815260200160002060010180549050811061076d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076490611499565b60405180910390fd5b600160008084815260200190815260200160002060050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506000808381526020019081526020016000206006016000828152602001908152602001600020600081548092919061080f906114e8565b91905055507f1abe610cf2bf87e57dcc1181fcf5ac0934e843d8344ab9eed6e86c799f62585e8233836040516108479392919061153f565b60405180910390a15050565b600080600084815260200190815260200160002060040160009054906101000a900460ff166108b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ae90611289565b60405180910390fd5b600080848152602001908152602001600020600101805490508210610911576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090890611499565b60405180910390fd5b600080848152602001908152602001600020600601600083815260200190815260200160002054905092915050565b6000600283511015610987576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097e906115e8565b60405180910390fd5b600082116109ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c190611654565b60405180910390fd5b6000600160008154809291906109df906114e8565b9190505590506000806000838152602001908152602001600020905085816000019081610a0c9190611820565b5084816001019080519060200190610a25929190610abf565b50428160020181905550603c84610a3c91906118f2565b42610a479190611934565b816003018190555060018160040160006101000a81548160ff0219169083151502179055507fa4a37594bd950f738bfc9098ad16f41783db2578797b7571e722b58b2034b54682878784600201548560030154604051610aab959493929190611968565b60405180910390a181925050509392505050565b828054828255906000526020600020908101928215610b07579160200282015b82811115610b06578251829081610af69190611820565b5091602001919060010190610adf565b5b509050610b149190610b18565b5090565b5b80821115610b385760008181610b2f9190610b3c565b50600101610b19565b5090565b508054610b48906112d8565b6000825580601f10610b5a5750610b79565b601f016020900490600052602060002090810190610b789190610b7c565b5b50565b5b80821115610b95576000816000905550600101610b7d565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610bc081610bad565b8114610bcb57600080fd5b50565b600081359050610bdd81610bb7565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c0e82610be3565b9050919050565b610c1e81610c03565b8114610c2957600080fd5b50565b600081359050610c3b81610c15565b92915050565b60008060408385031215610c5857610c57610ba3565b5b6000610c6685828601610bce565b9250506020610c7785828601610c2c565b9150509250929050565b60008115159050919050565b610c9681610c81565b82525050565b6000602082019050610cb16000830184610c8d565b92915050565b610cc081610bad565b82525050565b6000602082019050610cdb6000830184610cb7565b92915050565b600060208284031215610cf757610cf6610ba3565b5b6000610d0584828501610bce565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610d48578082015181840152602081019050610d2d565b60008484015250505050565b6000601f19601f8301169050919050565b6000610d7082610d0e565b610d7a8185610d19565b9350610d8a818560208601610d2a565b610d9381610d54565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b6000610de682610d0e565b610df08185610dca565b9350610e00818560208601610d2a565b610e0981610d54565b840191505092915050565b6000610e208383610ddb565b905092915050565b6000602082019050919050565b6000610e4082610d9e565b610e4a8185610da9565b935083602082028501610e5c85610dba565b8060005b85811015610e985784840389528151610e798582610e14565b9450610e8483610e28565b925060208a01995050600181019050610e60565b50829750879550505050505092915050565b600060a0820190508181036000830152610ec48188610d65565b90508181036020830152610ed88187610e35565b9050610ee76040830186610cb7565b610ef46060830185610cb7565b610f016080830184610c8d565b9695505050505050565b60006080820190508181036000830152610f258187610d65565b9050610f346020830186610cb7565b610f416040830185610cb7565b610f4e6060830184610c8d565b95945050505050565b60008060408385031215610f6e57610f6d610ba3565b5b6000610f7c85828601610bce565b9250506020610f8d85828601610bce565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610fd982610d54565b810181811067ffffffffffffffff82111715610ff857610ff7610fa1565b5b80604052505050565b600061100b610b99565b90506110178282610fd0565b919050565b600067ffffffffffffffff82111561103757611036610fa1565b5b61104082610d54565b9050602081019050919050565b82818337600083830152505050565b600061106f61106a8461101c565b611001565b90508281526020810184848401111561108b5761108a610f9c565b5b61109684828561104d565b509392505050565b600082601f8301126110b3576110b2610f97565b5b81356110c384826020860161105c565b91505092915050565b600067ffffffffffffffff8211156110e7576110e6610fa1565b5b602082029050602081019050919050565b600080fd5b600061111061110b846110cc565b611001565b90508083825260208201905060208402830185811115611133576111326110f8565b5b835b8181101561117a57803567ffffffffffffffff81111561115857611157610f97565b5b808601611165898261109e565b85526020850194505050602081019050611135565b5050509392505050565b600082601f83011261119957611198610f97565b5b81356111a98482602086016110fd565b91505092915050565b6000806000606084860312156111cb576111ca610ba3565b5b600084013567ffffffffffffffff8111156111e9576111e8610ba8565b5b6111f58682870161109e565b935050602084013567ffffffffffffffff81111561121657611215610ba8565b5b61122286828701611184565b925050604061123386828701610bce565b9150509250925092565b7f506f6c6c20646f6573206e6f7420657869737400000000000000000000000000600082015250565b6000611273601383610d19565b915061127e8261123d565b602082019050919050565b600060208201905081810360008301526112a281611266565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806112f057607f821691505b602082108103611303576113026112a9565b5b50919050565b7f416c726561647920766f74656400000000000000000000000000000000000000600082015250565b600061133f600d83610d19565b915061134a82611309565b602082019050919050565b6000602082019050818103600083015261136e81611332565b9050919050565b7f506f6c6c20686173206e6f742073746172746564000000000000000000000000600082015250565b60006113ab601483610d19565b91506113b682611375565b602082019050919050565b600060208201905081810360008301526113da8161139e565b9050919050565b7f506f6c6c2068617320656e646564000000000000000000000000000000000000600082015250565b6000611417600e83610d19565b9150611422826113e1565b602082019050919050565b600060208201905081810360008301526114468161140a565b9050919050565b7f496e76616c6964206f7074696f6e000000000000000000000000000000000000600082015250565b6000611483600e83610d19565b915061148e8261144d565b602082019050919050565b600060208201905081810360008301526114b281611476565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006114f382610bad565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611525576115246114b9565b5b600182019050919050565b61153981610c03565b82525050565b60006060820190506115546000830186610cb7565b6115616020830185611530565b61156e6040830184610cb7565b949350505050565b7f4174206c656173742074776f206f7074696f6e7320617265207265717569726560008201527f6400000000000000000000000000000000000000000000000000000000000000602082015250565b60006115d2602183610d19565b91506115dd82611576565b604082019050919050565b60006020820190508181036000830152611601816115c5565b9050919050565b7f4475726174696f6e206d75737420626520706f73697469766500000000000000600082015250565b600061163e601983610d19565b915061164982611608565b602082019050919050565b6000602082019050818103600083015261166d81611631565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026116d67fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611699565b6116e08683611699565b95508019841693508086168417925050509392505050565b6000819050919050565b600061171d61171861171384610bad565b6116f8565b610bad565b9050919050565b6000819050919050565b61173783611702565b61174b61174382611724565b8484546116a6565b825550505050565b600090565b611760611753565b61176b81848461172e565b505050565b5b8181101561178f57611784600082611758565b600181019050611771565b5050565b601f8211156117d4576117a581611674565b6117ae84611689565b810160208510156117bd578190505b6117d16117c985611689565b830182611770565b50505b505050565b600082821c905092915050565b60006117f7600019846008026117d9565b1980831691505092915050565b600061181083836117e6565b9150826002028217905092915050565b61182982610d0e565b67ffffffffffffffff81111561184257611841610fa1565b5b61184c82546112d8565b611857828285611793565b600060209050601f83116001811461188a5760008415611878578287015190505b6118828582611804565b8655506118ea565b601f19841661189886611674565b60005b828110156118c05784890151825560018201915060208501945060208101905061189b565b868310156118dd57848901516118d9601f8916826117e6565b8355505b6001600288020188555050505b505050505050565b60006118fd82610bad565b915061190883610bad565b925082820261191681610bad565b9150828204841483151761192d5761192c6114b9565b5b5092915050565b600061193f82610bad565b915061194a83610bad565b9250828201905080821115611962576119616114b9565b5b92915050565b600060a08201905061197d6000830188610cb7565b818103602083015261198f8187610d65565b905081810360408301526119a38186610e35565b90506119b26060830185610cb7565b6119bf6080830184610cb7565b969550505050505056fea2646970667358221220543c0f60ef0beb1a5ae83ee5ac097c778f535d7f94270f2141d4d73dfc2dffea64736f6c63430008130033";

type VotingSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VotingSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VotingSystem__factory extends ContractFactory {
  constructor(...args: VotingSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      VotingSystem & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): VotingSystem__factory {
    return super.connect(runner) as VotingSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VotingSystemInterface {
    return new Interface(_abi) as VotingSystemInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): VotingSystem {
    return new Contract(address, _abi, runner) as unknown as VotingSystem;
  }
}
